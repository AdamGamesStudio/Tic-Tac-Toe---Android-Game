// Generated by view binder compiler. Do not edit!
package com.adamgamesstudio.tictactoegame.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.adamgamesstudio.tictactoegame.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAppInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button contactButton;

  @NonNull
  public final View divider;

  @NonNull
  public final View divider2;

  @NonNull
  public final ImageView iconLogo;

  @NonNull
  public final Button playButton;

  @NonNull
  public final Button reportBugButton;

  private ActivityAppInfoBinding(@NonNull ConstraintLayout rootView, @NonNull Button contactButton,
      @NonNull View divider, @NonNull View divider2, @NonNull ImageView iconLogo,
      @NonNull Button playButton, @NonNull Button reportBugButton) {
    this.rootView = rootView;
    this.contactButton = contactButton;
    this.divider = divider;
    this.divider2 = divider2;
    this.iconLogo = iconLogo;
    this.playButton = playButton;
    this.reportBugButton = reportBugButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAppInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAppInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_app_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAppInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contactButton;
      Button contactButton = ViewBindings.findChildViewById(rootView, id);
      if (contactButton == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.divider2;
      View divider2 = ViewBindings.findChildViewById(rootView, id);
      if (divider2 == null) {
        break missingId;
      }

      id = R.id.iconLogo;
      ImageView iconLogo = ViewBindings.findChildViewById(rootView, id);
      if (iconLogo == null) {
        break missingId;
      }

      id = R.id.playButton;
      Button playButton = ViewBindings.findChildViewById(rootView, id);
      if (playButton == null) {
        break missingId;
      }

      id = R.id.reportBugButton;
      Button reportBugButton = ViewBindings.findChildViewById(rootView, id);
      if (reportBugButton == null) {
        break missingId;
      }

      return new ActivityAppInfoBinding((ConstraintLayout) rootView, contactButton, divider,
          divider2, iconLogo, playButton, reportBugButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
